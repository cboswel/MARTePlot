$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +Clock = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 100
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }

	+UDP = {
	    Class = IOGAM
            NumberOfBuffers = 100
            InputSignals = {
            	Wave1 = {
		    DataSource = UDPReceiver
                    Type = uint32
                }
                Gain1 = {
		    DataSource = UDPReceiver
                    Type = float32
                }
                Freq1 = {
		    DataSource = UDPReceiver
                    Type = uint32
                }
            	Wave2 = {
		    DataSource = UDPReceiver
                    Type = uint32
                }
                Gain2 = {
		    DataSource = UDPReceiver
                    Type = float32
                }
                Freq2 = {
		    DataSource = UDPReceiver
                    Type = uint32
                }
            }
            OutputSignals = {
                Wave1 = {
		    DataSource = DDB1
                    Type = uint32
                }
                Gain1 = {
		    DataSource = DDB1
                    Type = float32
                }
                Freq1 = {
		    DataSource = DDB1
                    Type = uint32
                }
		Wave2 = {
		    DataSource = DDB1
                    Type = uint32
                }
                Gain2 = {
		    DataSource = DDB1
                    Type = float32
                }
                Freq2 = {
		    DataSource = DDB1
                    Type = uint32
                }
            }
        }

        +Sine1 = {
            Class = WaveformGAM::WaveformSin
            Amplitude = 1
            Frequency = 1
            Phase = 0
            Offset = 0
            InputSignals = {
                period1 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                sin1 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Saw1 = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0}
            Times = {0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0}
            InputSignals = {
                period1 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                saw1 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Square1 = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -1.0 1.0 1.0}
            Times = {0.0 0.49999 0.5 1.0}
            InputSignals = {
                period1 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                squ1 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Sine2 = {
            Class = WaveformGAM::WaveformSin
            Amplitude = 1
            Frequency = 1
            Phase = 0
            Offset = 0
            InputSignals = {
                period2 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                sin2 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Saw2 = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0}
            Times = {0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0}
            InputSignals = {
                period2 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                saw2 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }

        +Square2 = {
            Class = WaveformGAM::WaveformPointsDef
            Points = {-1.0 -1.0 1.0 1.0}
            Times = {0.0 0.49999 0.5 1.0}
            InputSignals = {
                period2 = {
                    Type = uint32
                    DataSource = DDB1
                }
            }
            OutputSignals = {
                squ2 = {
                    Type = float32
                    DataSource = DDB1
                }
            }
        }


	+Mux1 = {
	    Class = MuxGAM
	    InputSignals = {
		Wave1 = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfDimensions = 1
		}
		sin1 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		squ1 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		saw1 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	    OutputSignals = {
		Mux1Out = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	}

	+Mux2 = {
	    Class = MuxGAM
	    InputSignals = {
		Wave2 = {
		    DataSource = DDB1
		    Type = uint32
		    NumberOfDimensions = 1
		}
		sin2 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		squ2 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
		saw2 = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	    OutputSignals = {
		Mux2Out = {
		    DataSource = DDB1
		    Type = float32
		    NumberOfDimensions = 1
		}
	    }
	}

	+Period1 = {
	    Class = MathExpressionGAM
	    Expression = "
			period1 = Counter * (Freq1 + (uint32) 1);
			"
	    InputSignals = {
		Counter = {
		    Type = uint32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
		Freq1 = {
		    Type = uint32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
	    }
	    OutputSignals = {
		period1 = {
		    Type = uint32
		    DataSource = DDB1
		}
	    }
	}

	+Amp1 = {
	    Class = MathExpressionGAM
	    Expression = "
			sample1 = Mux1Out * Gain1;
			"
	    InputSignals = {
		Mux1Out = {
		    Type = float32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
		Gain1 = {
		    Type = float32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
	    }
	    OutputSignals = {
		sample1 = {
		    Type = float32
		    DataSource = DDB1
		}
	    }
	}

	+Period2 = {
	    Class = MathExpressionGAM
	    Expression = "
			period2 = Counter * (Freq2 + (uint32) 1);
			"
	    InputSignals = {
		Counter = {
		    Type = uint32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
		Freq2 = {
		    Type = uint32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
	    }
	    OutputSignals = {
		period2 = {
		    Type = uint32
		    DataSource = DDB1
		}
	    }
	}

	+Amp2 = {
	    Class = MathExpressionGAM
	    Expression = "
			sample2 = Mux2Out * Gain2;
			"
	    InputSignals = {
		Mux2Out = {
		    Type = float32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
		Gain2 = {
		    Type = float32
		    NumberOfElements = 1
		    DataSource = DDB1
		}
	    }
	    OutputSignals = {
		sample2 = {
		    Type = float32
		    DataSource = DDB1
		}
	    }
	}

	+CSV = {
	    Class = IOGAM
	    InputSignals = {
		Counter = {
		    DataSource = DDB1
		    Type = uint32
		}
		sample1 = {
		    DataSource = DDB1
		    Type = float32
		}
		sample2 = {
		    DataSource = DDB1
		    Type = float32
		}
	    }
	    OutputSignals = {
		Counter = {
		    DataSource = Write
		    Type = uint32
		}
		sample1 = {
		    DataSource = Write
		    Type = float32
		}
		sample2 = {
		    DataSource = Write
		    Type = float32
		}
	    }
	}

        +Print = {
            Class = IOGAM
            InputSignals = {
                sample1 = {
                    DataSource = DDB1
                    Type = float32
                }
            }
            OutputSignals = {
                sample1 = {
                    DataSource = LoggerDataSource
                    Type = float32
                }
            }
	}
    }
	       
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        } 
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            ExecutionMode = RealTimeThread
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }

	+Write = {
	    Class = FileDataSource::FileWriter
	    NumberOfBuffers = 200
	    CPUMask = 3
	    StackSize = 1000000
	    Filename = "../../data/wave.csv"
	    Overwrite = "yes"
	    FileFormat = "csv"
	    CSVSeparator = ","
	    StoreOnTrigger = 0
	    Signals = {
		Counter = {
		    Type = uint32
		}
		sample1 = {
		    Type = float32
		}
		sample2 = {
		    Type = float32
		}
	    }
	}

        +UDPReceiver = {
            Class = UDP::UDPReceiver
            Port = "5432"
            ExecutionMode = IndependentThread
            StackSize = 1000000
            CPUMask = 0x1
            Signals = {
		Wave1 = {
                    Type = uint32
                }
		Gain1 = {
		    Type = float32
		}
		Freq1 = {
		    Type = uint32
		}	
		Wave2 = {
                    Type = uint32
                }
		Gain2 = {
		    Type = float32
		}
		Freq2 = {
		    Type = uint32
		}
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    Functions = {Clock UDP Period1 Period2 Sine1 Sine2 Saw1 Saw2 Square1 Square2 Mux1 Mux2 Amp1 Amp2 CSV}
		}
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
